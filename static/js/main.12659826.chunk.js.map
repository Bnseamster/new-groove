{"version":3,"sources":["Components/QueryForm.js","Components/AudioPlayer.js","Components/Recommendation.js","Components/Recommendations.js","App.js","reportWebVitals.js","index.js"],"names":["QueryForm","onSubmit","useState","artist","setArtist","track","setTrack","genre","setGenre","tempo","setTempo","key","setKey","keys","chkGreen","e","console","log","target","checked","classList","add","remove","className","preventDefault","type","name","placeholder","onChange","value","map","Object","id","AudioPlayer","props","state","vidPlayerObj","this","player","videojs","videoNode","on","paused","vidPlayerObjj","setState","onPlay","parseInt","dispose","data-vjs-player","recNum","ref","node","React","Component","Recommendation","pauseOther","coverArtURL","preview","videoJsOptions","autoplay","controls","sources","src","alt","Recommendations","recommendations","recommendation","index","JSON","stringify","artists","album","images","url","preview_url","App","token","setToken","setArtistID","setTrackID","setRecommendations","searchParams","setParams","obj","lastPlayed","setLastPlayed","CLIENT_ID","CLIENT_SECRET","randomIndex","indexLength","Math","floor","random","hello","useEffect","tempAID","tempTID","tempToken","length","axios","headers","btoa","data","method","then","tokenResponse","access_token","catch","error","response","items","genres","push","splice","join","replace","tracks","document","querySelectorAll","paramsObj","pause","getElementById","forEach","addEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6OA0OeA,MAtOf,YAAgC,IAAZC,EAAW,EAAXA,SAAW,EAECC,mBAAS,IAFV,mBAEpBC,EAFoB,KAEZC,EAFY,OAGDF,mBAAS,IAHR,mBAGpBG,EAHoB,KAGbC,EAHa,OAIDJ,mBAAS,IAJR,mBAIpBK,EAJoB,KAIbC,EAJa,OAKDN,mBAAS,IALR,mBAKpBO,EALoB,KAKbC,EALa,OAMLR,mBAAS,IANJ,mBAMpBS,EANoB,KAMfC,EANe,KAuIrBC,EAAO,CACT,EAAK,EACL,QAAS,EACT,EAAI,EACJ,QAAQ,EACR,EAAI,EACJ,EAAI,EACJ,QAAQ,EACR,EAAI,EACJ,QAAQ,EACR,EAAI,EACJ,QAAQ,GACR,EAAI,IAEFC,EAAW,SAACC,GACdC,QAAQC,IAAIF,EAAEG,OAAOC,SACE,GAApBJ,EAAEG,OAAOC,SACRH,QAAQC,IAAI,KACZF,EAAEG,OAAOE,UAAUC,IAAM,cAEzBN,EAAEG,OAAOE,UAAUE,OAAS,cAepC,OACI,yBAASC,UAAU,iBAAiBtB,SARrB,SAACc,GAChBA,EAAES,iBACFR,QAAQC,IAAId,EAAQE,EAAOE,EAAOE,EAAOE,GACzCV,EAAS,CAACE,SAAQE,QAAOE,QAAOE,QAAOE,SAKvC,SACI,iCACI,sBAAKY,UAAU,sBAAf,UACI,2CACA,uBACA,uBAAOE,KAAK,OAAOC,KAAK,UAAUC,YAAY,aAAaC,SAAU,SAACb,GAAMX,EAAUW,EAAEG,OAAOW,aAEnG,sBAAKN,UAAU,qBAAf,UACI,0CACA,uBACA,uBAAOE,KAAK,OAAOC,KAAK,SAASC,YAAY,+BAA+BC,SAAU,SAACb,GAAMT,EAASS,EAAEG,OAAOW,aAEnH,sBAAKN,UAAU,qBAAf,UACI,0CACA,uBACA,qBAAKA,UAAU,kBAAf,SAlLD,CACX,WACA,WACA,WACA,cACA,UACA,QACA,cACA,YACA,QACA,YACA,SACA,YACA,UACA,WACA,gBACA,WACA,QACA,YACA,OACA,SACA,UACA,QACA,YACA,cACA,aACA,iBACA,QACA,SACA,gBACA,MACA,UACA,MACA,UACA,aACA,MACA,OACA,QACA,SACA,OACA,SACA,SACA,SACA,OACA,YACA,SACA,SACA,SACA,QACA,YACA,WACA,YACA,cACA,UACA,WACA,aACA,QACA,MACA,SACA,QACA,YACA,aACA,UACA,UACA,SACA,QACA,SACA,OACA,QACA,OACA,QACA,SACA,QACA,WACA,QACA,aACA,YACA,iBACA,SACA,MACA,UACA,cACA,QACA,SACA,QACA,kBACA,QACA,MACA,WACA,eACA,YACA,oBACA,aACA,OACA,YACA,QACA,YACA,SACA,YACA,YACA,OACA,cACA,aACA,UACA,MACA,QACA,QACA,YACA,aACA,oBACA,MACA,QACA,aACA,OACA,cACA,UACA,QACA,SACA,UACA,YACA,QACA,SACA,SACA,WACA,UACA,WACE,eAqDsBO,KAAI,SAACvB,GAAD,OACR,wBAAOgB,UAAU,oBAAjB,UACKhB,EACD,uBAAOkB,KAAK,WAAWC,KAAK,SAASE,SAAU,SAACb,GAC5CP,EAAS,CAACD,IACVO,EAASC,MAEb,sBAAMQ,UAAU,yBAMhC,sBAAKA,UAAU,qBAAf,UACI,0CACA,uBACA,uBAAOE,KAAK,OAAOC,KAAK,aAAaC,YAAY,MAAMC,SAAU,SAACb,GAAML,EAASK,EAAEG,OAAOW,aAE9F,sBAAKN,UAAU,mBAAf,UACI,wCACA,uBACA,qBAAKA,UAAU,sBAAf,SACKQ,OAAOlB,KAAKA,GAAMiB,KAAI,SAACnB,GAAD,OACnB,wBAAOY,UAAU,oBAAjB,UACKZ,EACD,uBAAOc,KAAK,QAAQC,KAAK,OAAOE,SAAU,SAACb,GACvCC,QAAQC,IAAIF,EAAEG,QACdJ,EAASC,GAETH,EAAOC,EAAKF,OAEhB,sBAAMY,UAAU,yBAKhC,uBAAOS,GAAG,SAASP,KAAK,SAASI,MAAM,iB,gDChOlCI,E,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAc,GAHC,E,gEAOE,IAAD,OAElBC,KAAKC,OAASC,YAAQF,KAAKG,UAAWH,KAAKH,OAAO,eAGlDG,KAAKC,OAAOG,GAAG,SAAQ,WACrB,GAAG,EAAKH,OAAOI,SACb1B,QAAQC,IAAI,aACT,CACH,IA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","file":"static/js/main.12659826.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\n\r\n\r\nfunction QueryForm({onSubmit}) {\r\n\r\n    const [artist, setArtist] = useState('');\r\n    const [track, setTrack] = useState('');\r\n    const [genre, setGenre] = useState([]);\r\n    const [tempo, setTempo] = useState('');\r\n    const [key, setKey] = useState('');\r\n\r\n    const genres = [\r\n        \"acoustic\",\r\n        \"afrobeat\",\r\n        \"alt-rock\",\r\n        \"alternative\",\r\n        \"ambient\",\r\n        \"anime\",\r\n        \"black-metal\",\r\n        \"bluegrass\",\r\n        \"blues\",\r\n        \"bossanova\",\r\n        \"brazil\",\r\n        \"breakbeat\",\r\n        \"british\",\r\n        \"cantopop\",\r\n        \"chicago-house\",\r\n        \"children\",\r\n        \"chill\",\r\n        \"classical\",\r\n        \"club\",\r\n        \"comedy\",\r\n        \"country\",\r\n        \"dance\",\r\n        \"dancehall\",\r\n        \"death-metal\",\r\n        \"deep-house\",\r\n        \"detroit-techno\",\r\n        \"disco\",\r\n        \"disney\",\r\n        \"drum-and-bass\",\r\n        \"dub\",\r\n        \"dubstep\",\r\n        \"edm\",\r\n        \"electro\",\r\n        \"electronic\",\r\n        \"emo\",\r\n        \"folk\",\r\n        \"forro\",\r\n        \"french\",\r\n        \"funk\",\r\n        \"garage\",\r\n        \"german\",\r\n        \"gospel\",\r\n        \"goth\",\r\n        \"grindcore\",\r\n        \"groove\",\r\n        \"grunge\",\r\n        \"guitar\",\r\n        \"happy\",\r\n        \"hard-rock\",\r\n        \"hardcore\",\r\n        \"hardstyle\",\r\n        \"heavy-metal\",\r\n        \"hip-hop\",\r\n        \"holidays\",\r\n        \"honky-tonk\",\r\n        \"house\",\r\n        \"idm\",\r\n        \"indian\",\r\n        \"indie\",\r\n        \"indie-pop\",\r\n        \"industrial\",\r\n        \"iranian\",\r\n        \"j-dance\",\r\n        \"j-idol\",\r\n        \"j-pop\",\r\n        \"j-rock\",\r\n        \"jazz\",\r\n        \"k-pop\",\r\n        \"kids\",\r\n        \"latin\",\r\n        \"latino\",\r\n        \"malay\",\r\n        \"mandopop\",\r\n        \"metal\",\r\n        \"metal-misc\",\r\n        \"metalcore\",\r\n        \"minimal-techno\",\r\n        \"movies\",\r\n        \"mpb\",\r\n        \"new-age\",\r\n        \"new-release\",\r\n        \"opera\",\r\n        \"pagode\",\r\n        \"party\",\r\n        \"philippines-opm\",\r\n        \"piano\",\r\n        \"pop\",\r\n        \"pop-film\",\r\n        \"post-dubstep\",\r\n        \"power-pop\",\r\n        \"progressive-house\",\r\n        \"psych-rock\",\r\n        \"punk\",\r\n        \"punk-rock\",\r\n        \"r-n-b\",\r\n        \"rainy-day\",\r\n        \"reggae\",\r\n        \"reggaeton\",\r\n        \"road-trip\",\r\n        \"rock\",\r\n        \"rock-n-roll\",\r\n        \"rockabilly\",\r\n        \"romance\",\r\n        \"sad\",\r\n        \"salsa\",\r\n        \"samba\",\r\n        \"sertanejo\",\r\n        \"show-tunes\",\r\n        \"singer-songwriter\",\r\n        \"ska\",\r\n        \"sleep\",\r\n        \"songwriter\",\r\n        \"soul\",\r\n        \"soundtracks\",\r\n        \"spanish\",\r\n        \"study\",\r\n        \"summer\",\r\n        \"swedish\",\r\n        \"synth-pop\",\r\n        \"tango\",\r\n        \"techno\",\r\n        \"trance\",\r\n        \"trip-hop\",\r\n        \"turkish\",\r\n        \"work-out\",\r\n          \"world-music\"]\r\n    const keys = {\r\n        'C': 0,\r\n        'C#/Db': 1,\r\n        'D':2,\r\n        'D#/Eb':3,\r\n        'E':4,\r\n        'F':5,\r\n        'F#/Gb':6,\r\n        'G':7,\r\n        'G#/Ab':8,\r\n        'A':9,\r\n        'A#/Bb':10,\r\n        'B':11,\r\n    }\r\n    const chkGreen = (e)=>{\r\n        console.log(e.target.checked)\r\n        if(e.target.checked == true){\r\n            console.log('1')\r\n            e.target.classList.add = 'green-glow';\r\n        }else{\r\n            e.target.classList.remove = 'green-glow';\r\n        }    \r\n    }\r\n\r\n    const checkChange = (e)=>{\r\n    \r\n    }\r\n\r\n    const sendParams = (e)=>{\r\n        e.preventDefault();\r\n        console.log(artist, track, genre, tempo, key)\r\n        onSubmit({artist, track, genre, tempo, key});\r\n\r\n    }\r\n\r\n    return (\r\n        <section className='container form' onSubmit={sendParams}>\r\n            <form>\r\n                <div className='form-control artist'>\r\n                    <label>Artist</label>\r\n                    <br></br>\r\n                    <input type='text' name='artists' placeholder='i.e. Drake' onChange={(e)=> {setArtist(e.target.value)}}/>\r\n                </div>\r\n                <div className='form-control track'>\r\n                    <label>Track</label>\r\n                    <br></br>\r\n                    <input type='text' name='tracks' placeholder='i.e. Started from the Bottom' onChange={(e)=> {setTrack(e.target.value)}}/>\r\n                </div>\r\n                <div className='form-control genre'>\r\n                    <label>Genre</label>\r\n                    <br></br>\r\n                    <div className='boxes-container'>\r\n                        {genres.map((genre)=>(\r\n                            <label className='chk-box-container'>\r\n                                {genre}\r\n                                <input type='checkbox' name='genres' onChange={(e)=> {\r\n                                    setGenre([genre]);\r\n                                    chkGreen(e);\r\n                                    }}/>\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className='form-control tempo'>\r\n                    <label>Tempo</label>\r\n                    <br></br>\r\n                    <input type='text' name='target_key' placeholder='130' onChange={(e)=> {setTempo(e.target.value)}}/>\r\n                </div>\r\n                <div className='form-control key'>\r\n                    <label>Key</label>\r\n                    <br></br>\r\n                    <div className='boxes-container key'>\r\n                        {Object.keys(keys).map((key)=>(\r\n                            <label className='chk-box-container'>\r\n                                {key}\r\n                                <input type='radio' name='keys' onChange={(e)=> {\r\n                                    console.log(e.target);\r\n                                    chkGreen(e);\r\n                                    checkChange(e);\r\n                                    setKey(keys[key]);\r\n                                    }}/>\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <input id='submit' type='submit' value='SUBMIT'></input>\r\n                \r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default QueryForm\r\n","import React from 'react';\r\nimport videojs from 'video.js';\r\n\r\nexport default class AudioPlayer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      vidPlayerObj: 0,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    // instantiate video.js\r\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\r\n\r\n    });\r\n    this.player.on('click',()=>{\r\n      if(this.player.paused()){\r\n        console.log('hello')        \r\n      }else{\r\n        let vidPlayerObjj = this.player.player().id();\r\n        this.setState({\r\n          vidPlayerObj: this.player.player().id()\r\n        })\r\n        console.log(vidPlayerObjj)\r\n        this.props.onPlay(parseInt(vidPlayerObjj))\r\n      }\r\n    })\r\n  }\r\n  \r\n  \r\n  // destroy player on unmount\r\n  componentWillUnmount() {\r\n    if (this.player) {\r\n      this.player.dispose();\r\n    }\r\n  }\r\n  \r\n  // wrap the player in a div with a `data-vjs-player` attribute\r\n  // so videojs won't create additional wrapper in the DOM\r\n  // see https://github.com/videojs/video.js/pull/3856\r\n  render() {\r\n    return (\r\n      <div data-vjs-player>\r\n        <video id={this.props.recNum} ref={node => (this.videoNode = node)} className=\"video-js\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport AudioPlayer from './AudioPlayer.js'\r\n\r\n\r\nfunction Recommendation({pauseOther, recNum, track, artist, coverArtURL, preview}) {\r\n    \r\n    \r\n\r\n    const videoJsOptions = {\r\n        autoplay: false,\r\n        controls: true,\r\n        sources: [\r\n          {\r\n            src: `${preview}`,\r\n            type: 'video/mp4',\r\n          },\r\n        ],\r\n      };\r\n    \r\n\r\n\r\n    return (\r\n        <div className='recommendation'>\r\n            <div className='rec-number'>{recNum}</div>\r\n            <div className='rec-img'><img src={coverArtURL} alt={`album cover for ${track} by ${artist}`}></img></div>\r\n            <div className='rec-name'>\r\n                <h2 className='track-name'>{track}</h2>\r\n                <p>by</p>\r\n                <h3 className='artists-name'>{artist}</h3>        \r\n            </div>        \r\n            <div className='rec-preview'>\r\n                { preview != \"null\" && <AudioPlayer recNum={recNum} onPlay={pauseOther} { ...videoJsOptions } />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recommendation\r\n","import { useState, useEffect } from 'react'\r\nimport Recommendation from './Recommendation'\r\n\r\nconst Recommendations = ({recommendations, pauseOther}) => {\r\n    // const [buttonLabels, setButtonLabels] = useState([]);\r\n    \r\n\r\n\r\n   \r\n    return (\r\n        <section className='container recommendations'>\r\n            {console.log(recommendations)}\r\n            {recommendations.map((recommendation,index)=>( \r\n                <Recommendation pauseOther={pauseOther} key = {index} recNum = {index + 1} track={JSON.stringify(recommendation.name)} artist={recommendation.artists[0].name} coverArtURL = {`${recommendation.album.images[1].url}`} preview={`${recommendation.preview_url}`}/>   \r\n            ))}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Recommendations\r\n","import { useState, useEffect } from 'react';\nimport QueryForm from './Components/QueryForm';\nimport Recommendations from './Components/Recommendations';\nimport axios from 'axios';\n\n\nfunction App() {\n      \n    const [token, setToken] = useState('');\n    const [artistID, setArtistID] = useState('');\n    const [trackID, setTrackID] = useState('');\n    const [recommendations, setRecommendations] = useState([]);\n    const [searchParams, setParams ]= useState({})\n    const [lastPlayed, setLastPlayed] = useState({obj : {}, id: -1});\n\n    const pauseOther = (id)=>{\n        if(lastPlayed.id == -1){\n          setLastPlayed({\n            obj : document.getElementById(`${id}_html5_api`),\n            id: id\n          })\n          return\n        }else if(id != lastPlayed.id){\n\n          lastPlayed.obj.pause();\n          setLastPlayed({\n              obj:document.getElementById(`${id}_html5_api`),\n              id:id\n            })\n        }\n    }\n\n    \n  \n    const fetchRecommendations = (paramsObj)=>{     \n      setParams(paramsObj);\n      console.log(searchParams)\n  \n    }\n    ///API CALL LOGIC\n    const CLIENT_ID = '5895f98c24ce4792826ece2403169238'\n    const CLIENT_SECRET = 'bce4f73f463f492c925b57164f0986d8'\n    const acceptableGenres = [\n    \"acoustic\",\n    \"afrobeat\",\n    \"alt-rock\",\n    \"alternative\",\n    \"ambient\",\n    \"anime\",\n    \"black-metal\",\n    \"bluegrass\",\n    \"blues\",\n    \"bossanova\",\n    \"brazil\",\n    \"breakbeat\",\n    \"british\",\n    \"cantopop\",\n    \"chicago-house\",\n    \"children\",\n    \"chill\",\n    \"classical\",\n    \"club\",\n    \"comedy\",\n    \"country\",\n    \"dance\",\n    \"dancehall\",\n    \"death-metal\",\n    \"deep-house\",\n    \"detroit-techno\",\n    \"disco\",\n    \"disney\",\n    \"drum-and-bass\",\n    \"dub\",\n    \"dubstep\",\n    \"edm\",\n    \"electro\",\n    \"electronic\",\n    \"emo\",\n    \"folk\",\n    \"forro\",\n    \"french\",\n    \"funk\",\n    \"garage\",\n    \"german\",\n    \"gospel\",\n    \"goth\",\n    \"grindcore\",\n    \"groove\",\n    \"grunge\",\n    \"guitar\",\n    \"happy\",\n    \"hard-rock\",\n    \"hardcore\",\n    \"hardstyle\",\n    \"heavy-metal\",\n    \"hip-hop\",\n    \"holidays\",\n    \"honky-tonk\",\n    \"house\",\n    \"idm\",\n    \"indian\",\n    \"indie\",\n    \"indie-pop\",\n    \"industrial\",\n    \"iranian\",\n    \"j-dance\",\n    \"j-idol\",\n    \"j-pop\",\n    \"j-rock\",\n    \"jazz\",\n    \"k-pop\",\n    \"kids\",\n    \"latin\",\n    \"latino\",\n    \"malay\",\n    \"mandopop\",\n    \"metal\",\n    \"metal-misc\",\n    \"metalcore\",\n    \"minimal-techno\",\n    \"movies\",\n    \"mpb\",\n    \"new-age\",\n    \"new-release\",\n    \"opera\",\n    \"pagode\",\n    \"party\",\n    \"philippines-opm\",\n    \"piano\",\n    \"pop\",\n    \"pop-film\",\n    \"post-dubstep\",\n    \"power-pop\",\n    \"progressive-house\",\n    \"psych-rock\",\n    \"punk\",\n    \"punk-rock\",\n    \"r-n-b\",\n    \"rainy-day\",\n    \"reggae\",\n    \"reggaeton\",\n    \"road-trip\",\n    \"rock\",\n    \"rock-n-roll\",\n    \"rockabilly\",\n    \"romance\",\n    \"sad\",\n    \"salsa\",\n    \"samba\",\n    \"sertanejo\",\n    \"show-tunes\",\n    \"singer-songwriter\",\n    \"ska\",\n    \"sleep\",\n    \"songwriter\",\n    \"soul\",\n    \"soundtracks\",\n    \"spanish\",\n    \"study\",\n    \"summer\",\n    \"swedish\",\n    \"synth-pop\",\n    \"tango\",\n    \"techno\",\n    \"trance\",\n    \"trip-hop\",\n    \"turkish\",\n    \"work-out\",\n          \"world-music\"]\n    useEffect(()=> {\n        \n        let artist = searchParams.artist;\n        let track = searchParams.track;\n        let genre = searchParams.genre;\n        let tempo = searchParams.tempo === ''? '' :`&target_tempo=${searchParams.tempo}`\n        let key = searchParams.key === '' ? '' :`&target_key=${searchParams.key}`\n        let popularity = 20;\n        let searchLimit = 1;\n        let tempAID = '';\n        let tempTID = '';\n        let tempToken = '';\n\n        if(artist != ''){\n    \n            if(Object.keys(searchParams).length === 0){\n                return console.log('HERE')\n            }\n            setRecommendations([]);\n            setArtistID('');\n            setTrackID('');\n            setToken('');\n\n\n\n\n            axios('https://accounts.spotify.com/api/token', {\n                headers: {\n                    'Content-Type' : 'application/x-www-form-urlencoded',\n                    'Authorization' : 'Basic ' + btoa(CLIENT_ID + ':' + CLIENT_SECRET)      \n                },\n                data: 'grant_type=client_credentials',\n                  method: 'POST'\n            })\n                .then(tokenResponse => {\n\n                    setToken(tokenResponse.data.access_token);\n                    tempToken = tokenResponse.data.access_token;\n                    //search for artist ID (Search for an Item endpoint)**Default to song's artist/s\n                    return axios(`https://api.spotify.com/v1/search?q=${artist}&type=artist&market=US&limit=${searchLimit}`, {\n                        method: 'GET',\n                        headers: { 'Authorization' : 'Bearer ' + tempToken}\n                    })\n                })\n                .catch((error) => {\n                  console.error(error);\n                })\n                .then(response => {\n                \n                    setArtistID(response.data.artists.items[0].id);\n                    tempAID = response.data.artists.items[0].id;\n                    //If genre empty set to artist's genres\n\n\n                    genre = genre.length === 0 ? response.data.artists.items[0].genres: genre;\n                    if(genre.length > 3){\n                        let genres =[]\n                        while(genres.length < 3){\n                            if(genre[randomIndex(genre.length)]){\n                                let index = randomIndex(genre.length);\n                                genres.push(genre[index]);\n                                genre.splice(index,1);\n                            }\n                        }\n                        genre = genres.join(',');\n                    }else{\n\n                        genre = genre.join(',');\n                    }\n                \n                    genre = genre.replace(/[ ,]/g, '%20');               \n\n                    //search for track ID (Search for an Item endpoint)**Default to artists top songs if none given\n\n                    return axios(`https://api.spotify.com/v1/artists/${tempAID}/top-tracks?market=US`, {\n                        method: 'GET',\n                        headers: { 'Authorization' : 'Bearer ' + tempToken}\n                    })\n                })\n                .catch((error) => {\n                  console.error(error);\n                })\n                .then(response => {\n                    console.log(response.data.tracks) \n                    setTrackID(response.data.tracks[0].id);\n                    tempTID = response.data.tracks[0].id;\n                    console.log(genre, tempAID, tempTID)\n                    console.log(token)\n                    //search for related tracks (Get Recommendations Based on Seeds endpoint) has parameters of [limit, market, seed_artists*,seed_genres*,seed_tracks*, target_dancability, target_energy, target_key, target_tempo, target_popularity ]\n                    //https://api.spotify.com/v1/recommendations?limit=50&market=US&seed_artists=${artistID}&seed_genres=${genre}&seed_tracks=${trackID}\n                    \n                    return axios(`https://api.spotify.com/v1/recommendations?limit=50&market=US&seed_artists=${tempAID}&seed_genres=${genre}&seed_tracks=${tempTID}&min_popularity=${popularity}${tempo}`, {\n                        method: 'GET',\n                        headers: { 'Authorization' : 'Bearer ' + tempToken}\n                    })\n                })\n                .catch((error) => {\n                  console.error(error);\n                })\n                .then(response => {\n                  setRecommendations(response.data.tracks)\n                  return \n                })\n            \n                .catch((error) => {\n                    console.error(error);  \n                })\n        }else if(artist == '' && track != ''){\n            \n            if(Object.keys(searchParams).length === 0){\n                return console.log('HERE')\n            }\n            setRecommendations([]);\n            setArtistID('');\n            setTrackID('');\n            setToken('');\n\n            axios('https://accounts.spotify.com/api/token', {\n                headers: {\n                    'Content-Type' : 'application/x-www-form-urlencoded',\n                    'Authorization' : 'Basic ' + btoa(CLIENT_ID + ':' + CLIENT_SECRET)      \n                },\n                data: 'grant_type=client_credentials',\n                  method: 'POST'\n            })\n                .then(tokenResponse => {\n\n                    setToken(tokenResponse.data.access_token);\n                    tempToken = tokenResponse.data.access_token;\n                    //search for artist ID (Search for an Item endpoint)**Default to song's artist/s\n                    return axios(`https://api.spotify.com/v1/search?q=${track}&type=track&market=US&limit=${searchLimit}`, {\n                        method: 'GET',\n                        headers: { 'Authorization' : 'Bearer ' + tempToken}\n                    })\n                })\n                .catch((error) => {\n                  console.error(error);\n                })\n                .then(response => {\n                    console.log(response.data)\n\n                    tempAID = response.data.tracks.items[0].album.artists[0].id;\n                    tempTID = response.data.tracks.items[0].id;\n                    //If genre empty set to artist's genres\n\n\n                    genre = genre.length === 0 ? response.data.artists.items[0].genres: genre;\n                    console.log(genre)\n                    if(genre.length > 3){\n                        let genres =[]\n                        while(genres.length < 3){\n                            if(genre[randomIndex(genre.length)]){\n                                let index = randomIndex(genre.length);\n                                genres.push(genre[index]);\n                                genre.splice(index,1);\n                            }\n                        }\n                        genre = genres.join(',');\n                    }else{\n\n                        genre = genre.join(',');\n                    }\n                \n                    genre = genre.replace(/[ ,]/g, '%20');               \n\n                    //search for related songs\n                    return axios(`https://api.spotify.com/v1/recommendations?limit=50&market=US&seed_artists=${tempAID}&seed_genres=${genre}&seed_tracks=${tempTID}&min_popularity=${popularity}${tempo}`, {\n                        method: 'GET',\n                        headers: { 'Authorization' : 'Bearer ' + tempToken}\n                    })\n                })\n                .catch((error) => {\n                  console.error(error);\n                })\n                .then(response => {\n                  setRecommendations(response.data.tracks)\n                  return \n                })\n            \n                .catch((error) => {\n                    console.error(error);  \n                })\n\n        }\n    },[searchParams])\n    \n    //Api helper function, generates random index of array\n    function randomIndex(indexLength){\n        return Math.floor(Math.random()*indexLength)\n    }\n///END OF API LOGIC\n    let videos = document.querySelectorAll('Video');\n    function getVids(){\n        videos = document.querySelectorAll('Video');\n        videos.forEach((e)=>{\n            e.addEventListener('play', hello)\n        })\n    }\n    function hello(){\n        console.log('hello')\n    }\n\n\n\n\n//artists={artists} tracks={tracks} genres={genres} tempo={tempo} key={key} INPUTS FOR RECOMMENDATIONS\n  return (\n    <div className=\"App\">\n      <h1 id='heading'>Song Recommender</h1>\n      <QueryForm onSubmit = {fetchRecommendations} />\n      <Recommendations pauseOther = {pauseOther} recommendations={recommendations}/>\n      {getVids()}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n// https://api.spotify.com/v1/recommendations?limit=50&market=US&seed_artists=3TVXtAsR1Inumwj472S9r4&seed_genres=pop rap,rap,hip hop&seed_tracks=2SAqBLGA283SUiwJ3xOUVI\n// https://api.spotify.com/v1/recommendations?limit=50&market=US&seed_artists=3TVXtAsR1Inumwj472S9r4&seed_genres=rap,toronto rap,canadian hip hop&seed_tracks=2SAqBLGA283SUiwJ3xOUVI","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}